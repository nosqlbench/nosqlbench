###########
# Overview: Starlight for JMS (S4J) API configuration items are listed at:
#           https://docs.datastax.com/en/fast-pulsar-jms/docs/1.1/pulsar-jms-reference.html#_configuration_options

##
# NOTE 1: this requires first enabling corresponding server side configurations as listed in the following doc
#         https://pulsar.apache.org/docs/3.0.x/txn-use/#steps
#
# NOTE 2: Astra streaming doesn't have transaction enabled (yet). Need to set this value to 'false'
#         in order to successfully connect to AS.
##
enableTransaction=false

####
# S4J API specific configurations (non Pulsar specific) - jms.***
#--------------------------------------
jms.usePulsarAdmin=false
jms.precreateQueueSubscription=false
jms.enableClientSideEmulation=false

# NOTE 1: this requires first enabling corresponding server side configurations as listed in the following doc
#         https://docs.datastax.com/en/streaming/starlight-for-jms/3.2/examples/pulsar-jms-server-side-filters.html#enable-server-side-filtering
#
# NOTE 2: Astra streaming doesn't have server side filtering enabled (yet). Need to set this value to 'false'
#         in order to successfully connect to AS.
jms.useServerSideFiltering=false

jms.useCredentialsFromCreateConnection=false
jms.transactionsStickyPartitions=true

##
# NOTE: When connecting to AS, the default "public" tenant is not available, you have to use a specific AS tenant.
#       Otherwise, you'll get authorization error when trying to create topi under "public/default"
##
#jms.systemNamespace=<AS_tenant>/default

# for JMS priority
jms.enableJMSPriority=true
jms.priorityMapping=non-linear
#...


#####
# Pulsar client related configurations - client.***
# - Valid settings: http://pulsar.apache.org/docs/en/client-libraries-java/#client
#
# - These Pulsar client settings (without the "client." prefix) will be
#   directly used as S4J configuration settings, on 1-to-1 basis.
#--------------------------------------
client.connectionTimeoutMs=5000

##
# NOTE: when connecting to AS, make sure you enable the following settings and
#       put here the corresponding token information
##
#client.authPlugin=org.apache.pulsar.client.impl.auth.AuthenticationToken
#client.authParams=token:<token_value>
#...


#####
# Producer related configurations (global) - producer.***
# - Valid settings: http://pulsar.apache.org/docs/en/client-libraries-java/#configure-producer
#
# - These Pulsar producer settings (without "producer." prefix) will be collectively (as a map)
#   mapped to S4J connection setting of "producerConfig"
#--------------------------------------
#producer.sendTimeoutMs=
producer.blockIfQueueFull=true
#producer.maxPendingMessages=10000
#producer.batchingMaxMessages=10000
#...


#####
# Consumer related configurations (global) - consumer.***
# - Valid settings: http://pulsar.apache.org/docs/en/client-libraries-java/#configure-consumer
#
# - These Pulsar producer settings (without "consumer." portion) will be collectively (as a map)
#   mapped to S4J connection setting of "consumerConfig"
#--------------------------------------
consumer.receiverQueueSize=2000
consumer.acknowledgementsGroupTimeMicros=0
consumer.ackTimeoutMillis=2000

##
# The following settings are only needed for DLQ testing
##
#consumer.deadLetterPolicy={ "maxRedeliverCount":"5", "deadLetterTopic":"", "initialSubscriptionName":"" }
#consumer.ackTimeoutRedeliveryBackoff={"minDelayMs":"50", "maxDelayMs":"100", "multiplier":"2.0"}
#consumer.negativeAckRedeliveryBackoff={}
#...
