<!--
  ~ Copyright (c) 2023 nosqlbench
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>adapter-s4j</artifactId>
    <packaging>jar</packaging>

    <parent>
        <artifactId>mvn-defaults</artifactId>
        <groupId>io.nosqlbench</groupId>
        <version>${revision}</version>
        <relativePath>../mvn-defaults</relativePath>
    </parent>

    <name>${project.artifactId}</name>
    <description>
        A Starlight for JMS driver for nosqlbench. This provides the ability to inject synthetic data
        into a pulsar system via JMS 2.0 compatible APIs.

        NOTE: this is JMS compatible driver from DataStax that allows using a Pulsar cluster
        as the potential JMS Destination
    </description>

    <properties>
        <s4j.version>4.0.1</s4j.version>
    </properties>

    <dependencies>
        <!-- core dependencies -->
        <dependency>
            <groupId>io.nosqlbench</groupId>
            <artifactId>engine-api</artifactId>
            <version>${revision}</version>
        </dependency>

        <dependency>
            <groupId>io.nosqlbench</groupId>
            <artifactId>adapters-api</artifactId>
            <version>${revision}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.datastax.oss/pulsar-jms -->
        <dependency>
            <groupId>com.datastax.oss</groupId>
            <artifactId>pulsar-jms-all</artifactId>
            <version>${s4j.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
            <version>2.9.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.conscrypt/conscrypt-openjdk -->
        <dependency>
            <groupId>org.conscrypt</groupId>
            <artifactId>conscrypt-openjdk</artifactId>
            <version>2.5.2</version>
            <classifier>${os.detected.classifier}</classifier>
        </dependency>

    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
            </extension>
        </extensions>
    </build>

</project>
