min_version: "5.17.1"
description: A workload with only text keys and text values

scenarios:
  default:
    schema: run driver=cql tags==block:schema threads==1 cycles==UNDEF
    rampup: run driver=cql tags==block:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    main: run driver=cql tags==block:"main.*" cycles===TEMPLATE(main-cycles,10000000) threads=auto
  astra:
    schema: run driver=cql tags==block:schema-astra threads==1 cycles==UNDEF
    rampup: run driver=cql tags==block:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    main: run driver=cql tags==block:"main.*" cycles===TEMPLATE(main-cycles,10000000) threads=auto

bindings:
  seq_key: Mod(<<keycount:1000000000>>); ToString() -> String
  seq_value: Hash(); Mod(<<valuecount:1000000000>>); ToString() -> String
  rw_key: <<keydist:Uniform(0,1000000000)->int>>; ToString() -> String
  rw_value: Hash(); <<valdist:Uniform(0,1000000000)->int>>; ToString() -> String

blocks:
  schema:
    params:
      prepared: false
    ops:
      create-table: |
        create table if not exists <<keyspace:baselines>>.<<table:keyvalue>> (
        key text,
         value text,
         PRIMARY KEY (key)
        );

  schema-astra:
    params:
      prepared: false
    ops:
      create-table: |
        create table if not exists <<keyspace:baselines>>.<<table:keyvalue>> (
        key text,
         value text,
         PRIMARY KEY (key)
        );
  rampup:
    params:
      cl: <<write_cl:LOCAL_QUORUM>>
    ops:
      rampup-insert: |
          insert into <<keyspace:baselines>>.<<table:keyvalue>>
          (key, value)
          values ({seq_key},{seq_value});
  verify:
    params:
      cl: <<read_cl:LOCAL_QUORUM>>
      verify-fields: key->seq_key, value->seq_value
    ops:
      verify-select: |
          select * from <<keyspace:baselines>>.<<table:keyvalue>> where key={seq_key};
  main-read:
    params:
      ratio: 5
      cl: <<read_cl:LOCAL_QUORUM>>
    ops:
      main-select: |
         select * from <<keyspace:baselines>>.<<table:keyvalue>> where key={rw_key};
  main-write:
    params:
      ratio: 5
      cl: <<write_cl:LOCAL_QUORUM>>
    ops:
      main-insert: |
        insert into <<keyspace:baselines>>.<<table:keyvalue>> (key, value) values ({rw_key}, {rw_value});
