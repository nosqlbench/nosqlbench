min_version: "5.17.3"

description: >2
  This workload emulates a key-value data model and access patterns.
  This should be identical to the cql variant except for:
  - There is no instrumentation with the http driver.
  - There is no async mode with the http driver.
  - Refer to 'http-rest.md' for more information.

scenarios:
  default:
    schema: run driver=http tags==block:schema threads==1 cycles==UNDEF
    rampup: run driver=http tags==block:"rampup.*" cycles===TEMPLATE(rampup-cycles,10) threads=auto
    main: run driver=http tags==block:"main.*" cycles===TEMPLATE(main-cycles,10) threads=auto

bindings:

  weighted_hosts: ToString(); WeightedStrings('<<stargate_host:stargate>>'); ToString();
  request_id: ToHashedUUID(); ToString();
  token: Discard(); Token('<<auth_token:>>','<<auth_uri:http://localhost:8081/v1/auth>>', '<<auth_uid:cassandra>>', '<<auth_pswd:cassandra>>');

  seq_key: Mod(<<keycount:10000000>>); ToString() -> String
  seq_value: Hash(); Mod(<<valuecount:1000000000>>); ToString() -> String

  rw_key: <<keydist:Uniform(0,10000000)->int>>; ToString() -> String
  rw_value: Hash(); <<valdist:Uniform(0,1000000000)->int>>; ToString() -> String

blocks:
  schema:
    ops:
      create-keyspace:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/schemas/keyspaces
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "<<keyspace:baselines>>",
            "replicas": <<rf:1>>
          }
      drop-table:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/schemas/keyspaces/<<keyspace:baselines>>/tables/<<table:keyvalue>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        ok-status: "[2-4][0-9][0-9]"

      create-table:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/schemas/keyspaces/<<keyspace:baselines>>/tables
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "<<table:keyvalue>>",
            "columnDefinitions": [
              {
                "name": "key",
                "typeDefinition": "text"
              },
              {
                "name": "value",
                "typeDefinition": "text"
              }
            ],
            "primaryKey": {
              "partitionKey": [
                "key"
              ]
            },
            "ifNotExists": true
          }

  schema-astra:
    ops:
      create-table-astra:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/schemas/keyspaces/<<keyspace:baselines>>/tables
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "<<table:keyvalue>>",
            "columnDefinitions": [
              {
                "name": "key",
                "typeDefinition": "text"
              },
              {
                "name": "value",
                "typeDefinition": "text"
              }
            ],
            "primaryKey": {
              "partitionKey": [
                "key"
              ]
            },
            "ifNotExists": true
          }
  rampup:
    ops:
      rampup-insert:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/keyspaces/<<keyspace:baselines>>/<<table:keyvalue>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "key": "{seq_key}",
            "value": "{seq_value}"
          }

  main-read:
    params:
      ratio: <<read_ratio:5>>
    ops:
      main-select:
        method: GET
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/keyspaces/<<keyspace:baselines>>/<<table:keyvalue>>/{rw_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        ok-status: "[2-4][0-9][0-9]"

  main-write:
    params:
      ratio: <<write_ratio:5>>
    ops:
      main-write:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<restapi_port:8082>><<path_prefix:>>/v2/keyspaces/<<keyspace:baselines>>/<<table:keyvalue>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "key": "{rw_key}",
            "value": "{rw_value}"
          }