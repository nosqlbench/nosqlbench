min_version: "5.17.3"

description: |
  This starter workload uses an open source data gateway called Stargate,
  which works with a simple key-value data model.
  1. Create a keyspace.
  2. Drop table if existing.
  3. Create table

scenarios:
  default:
    schema: run driver=http tags==block:"schema.*" threads==1 cycles==UNDEF
    rampup: run driver=http tags==block:"rampup.*" cycles===10 threads=auto
    main: run driver=http tags==block:"main.*" cycles===10 threads=auto

bindings:
  request_id: ToHashedUUID(); ToString();
  token: Discard(); Token('<<auth_token:>>','<<auth_uri:http://localhost:8081/v1/auth>>', '<<auth_uid:cassandra>>', '<<auth_pswd:cassandra>>');

  seq_key: Mod(10000000); ToString() -> String
  seq_value: Hash(); Mod(1000000000); ToString() -> String

  rw_key: Uniform(0,10000000)->int; ToString() -> String
  rw_value: Hash(); Uniform(0,1000000000)->int; ToString() -> String


blocks:
  schema:
    ops:
      create-keyspace:
        method: POST
        uri: http://<<stargate_host>>:8082/v2/schemas/keyspaces
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "starter",
            "replicas": 1
          }

      drop-table:
        method: DELETE
        uri: http://<<stargate_host>>:8082/v2/schemas/keyspaces/starter/tables/http_rest_starter
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        ok-status: "[2-4][0-9][0-9]"

      create-table:
        method: POST
        uri: http://<<stargate_host>>:8082/v2/schemas/keyspaces/starter/tables
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "http_rest_starter",
            "columnDefinitions": [
              {
                "name": "key",
                "typeDefinition": "text"
              },
              {
                "name": "value",
                "typeDefinition": "text"
              }
            ],
            "primaryKey": {
              "partitionKey": [
                "key"
              ]
            },
            "ifNotExists": true
          }

  rampup:
    ops:
      rampup-insert:
        method: POST
        uri: http://<<stargate_host>>:8082/v2/keyspaces/starter/http_rest_starter
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "key": "{seq_key}",
            "value": "{seq_value}"
          }

  main-read:
    params:
      ratio: 5
    ops:
      main-select:
        method: GET
        uri: http://<<stargate_host>>:8082/v2/keyspaces/starter/http_rest_starter/{rw_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        ok-status: "[2-4][0-9][0-9]"

  main-write:
    params:
      ratio: 5
    ops:
      main-write:
        method: POST
        uri: http://<<stargate_host>>:8082/v2/keyspaces/starter/http_rest_starter
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "key": "{rw_key}",
            "value": "{rw_value}"
          }