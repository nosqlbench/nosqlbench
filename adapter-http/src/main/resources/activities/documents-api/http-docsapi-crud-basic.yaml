min_version: "5.17.1"

description: |
  This workload emulates CRUD operations for the Stargate Documents API.
  It generates a simple JSON document to be used for writes and updates.
  Note that docsapi_port should reflect the port where the Docs API is exposed (defaults to 8180).

scenarios:
  default:
    schema:   run driver=http tags==block:"schema.*" threads==1 cycles==UNDEF
    write:    run driver=http tags==block:'write.*' cycles===TEMPLATE(write-cycles,TEMPLATE(docscount,10000000)) threads=auto errors=timer,warn
    read:     run driver=http tags==block:'read.*' cycles===TEMPLATE(read-cycles,TEMPLATE(docscount,10000000)) threads=auto errors=timer,warn
    update:   run driver=http tags==block:'update.*' cycles===TEMPLATE(update-cycles,TEMPLATE(docscount,10000000)) threads=auto errors=timer,warn
    delete:   run driver=http tags==block:'delete.*' cycles===TEMPLATE(delete-cycles,TEMPLATE(docscount,10000000)) threads=auto errors=timer,warn

bindings:
  # To enable an optional weighted set of hosts in place of a load balancer
  # Examples
  #   single host: docsapi_host=host1
  #   multiple hosts: docsapi_host=host1,host2,host3
  #   multiple weighted hosts: docsapi_host=host1:3,host2:7
  weighted_hosts: WeightedStrings('<<docsapi_host:stargate>>')
  # http request id
  request_id: ToHashedUUID(); ToString();

  seq_key: Mod(<<docscount:10000000>>); ToString() -> String
  random_key: Uniform(0,<<docscount:10000000>>); ToString() -> String

  user_id: ToHashedUUID(); ToString() -> String
  created_on: Uniform(1262304000,1577836800) -> long
  gender: WeightedStrings('M:10;F:10;O:1')
  full_name: FullNames()
  married: ModuloToBoolean()
  city: Cities()
  country_code: CountryCodes()
  lat: Uniform(-180d, 180d)
  lng: Hash() -> long; Uniform(-180d, 180d)
  friend_id: Add(-1); ToHashedUUID(); ToString() -> String

blocks:
  schema:
    ops:
      create-namespace:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/schemas/namespaces
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        Content-Type: "application/json"
        body: |
          {
              "name": "<<namespace:docs_crud_basic>>",
              "replicas": <<rf:1>>
          }
        ok-status: ".*"

      delete-docs-collection:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections/<<collection:docs_collection>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        ok-status: "[2-4][0-9][0-9]"

      create-docs-collection:
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections
        method: POST
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        Content-Type: "application/json"
        body: |
          {
              "name": "<<collection:docs_collection>>"
          }

  write:
    ops:
      write-document:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections/<<collection:docs_collection>>/{seq_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        Content-Type: "application/json"
        body: |
          {
            "user_id":      "{user_id}",
            "created_on":   {created_on},
            "gender":       "{gender}",
            "full_name":    "{full_name}",
            "married":      {married},
            "address": {
              "primary": {
                  "city":   "{city}",
                  "cc":     "{country_code}"
              },
              "secondary":  {}
            },
            "coordinates": [
                            {lat},
                            {lng}
            ],
            "children":     [],
            "friends": [
                            "{friend_id}"
            ],
            "debt":         null
          }

  read:
    ops:
      read-document:
        method: GET
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections/<<collection:docs_collection>>/{random_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        ok-status: "[2-4][0-9][0-9]"

  update:
    ops:
      update-document:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections/<<collection:docs_collection>>/{random_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        Content-Type: "application/json"
        body: |
          {
            "user_id":      "{user_id}",
            "created_on":   {created_on},
            "gender":       "{gender}",
            "full_name":    "{full_name}",
            "married":      {married},
            "address": {
              "primary": {
                  "city":   "{city}",
                  "cc":     "{country_code}"
              },
              "secondary":  {}
            },
            "coordinates": [
                            {lat},
                            {lng}
            ],
            "children":     [],
            "friends": [
                            "{friend_id}"
            ],
            "debt":         null
          }

  delete:
    ops:
      delete-document:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_basic>>/collections/<<collection:docs_collection>>/{seq_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:my_auth_token>>"
        ok-status: "[2-4][0-9][0-9]"
