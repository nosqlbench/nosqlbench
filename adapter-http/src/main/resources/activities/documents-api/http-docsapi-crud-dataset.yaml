min_version: "5.17.3"

description: |
  This workload emulates CRUD operations for the Stargate Documents API.
  It requires a data set file, where each line is a single JSON document to be used for writes and updates.
  Note that docsapi_port should reflect the port where the Docs API is exposed (defaults to 8180).

scenarios:
  default:
    schema: run driver=http tags==block:"schema.*" threads==1 cycles==UNDEF
    main: run driver=http tags==block:"main.*" cycles===TEMPLATE(main-cycles,TEMPLATE(docscount,10)) threads=auto errors=timer,warn

bindings:
  weighted_hosts: WeightedStrings('<<docsapi_host:stargate>>')
  # http request id
  request_id: ToHashedUUID(); ToString();
  token: Discard(); Token('<<auth_token:>>','<<auth_uri:http://localhost:8081/v1/auth>>', '<<auth_uid:cassandra>>', '<<auth_pswd:cassandra>>');

  seq_key: Mod(<<docscount:10000000>>); ToString() -> String
  random_key: Uniform(0,<<docscount:10000000>>); ToString() -> String
  document_json: Discard(); FirstLines('data/docsapi-dataset.json', 1000));

blocks:
  schema:
    ops:
      create-namespace:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/schemas/namespaces
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "<<namespace:docs_crud_dataset>>",
            "replicas": <<rf:1>>
          }
        ok-status: ".*"

      delete-docs-collection:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections/<<collection:docs_collection>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        ok-status: "[2-4][0-9][0-9]"

      create-docs-collection:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: >2
          {
            "name": "<<collection:docs_collection>>"
          }
  main:
    ops:
      write-document:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections/<<collection:docs_collection>>/{seq_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: "{document_json}"

      read-document:
        method: GET
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections/<<collection:docs_collection>>/{random_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        ok-status: "[2-4][0-9][0-9]"

      # TODO - what is the purpose of this? does it overwrite? is there a way to make sure it is actually overwriting existing documents?
      update-document:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections/<<collection:docs_collection>>/{random_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        Content-Type: "application/json"
        body: "{document_json}"

      delete-document:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_crud_dataset>>/collections/<<collection:docs_collection>>/{seq_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "{token}"
        ok-status: "[2-4][0-9][0-9]"
