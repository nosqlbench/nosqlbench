min_version: "5.17.1"

description: |
  This workload emulates a key-value data model and access patterns.
  This should be identical to the cql variant except for:
  - Schema creation with the Docs API, we don't use cql because the Docs API is opinionated about schema.
  - There is no instrumentation with the http driver.
  - There is no async mode with the http driver.
  Note that docsapi_port should reflect the port where the Docs API is exposed (defaults to 8180).

scenarios:
  default:
    schema: run driver=http tags==block:"schema.*" threads==1 cycles==UNDEF
    rampup: run driver=http tags==block:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    main: run driver=http tags==block:main cycles===TEMPLATE(main-cycles,10000000) threads=auto

bindings:
  # To enable an optional weighted set of hosts in place of a load balancer
  # Examples
  #   single host: docsapi_host=host1
  #   multiple hosts: docsapi_host=host1,host2,host3
  #   multiple weighted hosts: docsapi_host=host1:3,host2:7
  weighted_hosts: WeightedStrings('<<docsapi_host:stargate>>')
  # http request id
  request_id: ToHashedUUID(); ToString();

  auto_gen_token: Discard(); StargateToken('http://localhost:8081/v1/auth'); ToString();

  seq_key: Mod(<<keycount:10000000>>); ToString() -> String
  seq_value: Hash(); Mod(<<valuecount:10000000>>); ToString() -> String
  rw_key: <<keydist:Uniform(0,<<keycount:10000000>>)->int>>; ToString() -> String
  rw_value: Hash(); <<valdist:Uniform(0,<<keycount:10000000>>)->int>>; ToString() -> String

blocks:
  schema:
    ops:
      create-namespace:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/schemas/namespaces
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        Content-Type: "application/json"
        body: >2
          {
              "name": "<<namespace:docs_keyvalue>>",
              "replicas": <<rf:1>>
          }
        ok-status: ".*"

      delete-docs-collection:
        method: DELETE
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_keyvalue>>/collections/<<collection:docs_collection>>
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        ok-status: "[2-4][0-9][0-9]"

      create-docs-collection:
        method: POST
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_keyvalue>>/collections
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        Content-Type: "application/json"
        body: >2
          {
              "name": "<<collection:docs_collection>>"
          }

  rampup:
    ops:
      rampup-insert:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_keyvalue>>/collections/<<collection:docs_collection>>/{seq_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        Content-Type: "application/json"
        body: >2
            {
              "{seq_key}":"{seq_value}"
            }

  main:
    params:
      ratio: <<read_ratio:5>>
    ops:
      main-select:
        method: GET
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_keyvalue>>/collections/<<collection:docs_collection>>/{rw_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        ok-status: "[2-4][0-9][0-9]"

      main-write:
        method: PUT
        uri: <<protocol:http>>://{weighted_hosts}:<<docsapi_port:8180>><<path_prefix:>>/v2/namespaces/<<namespace:docs_keyvalue>>/collections/<<collection:docs_collection>>/{rw_key}
        Accept: "application/json"
        X-Cassandra-Request-Id: "{request_id}"
        X-Cassandra-Token: "<<auth_token:{auto_gen_token}>>"
        Content-Type: "application/json"
        body: >2
            {
              "{rw_key}":"{rw_value}"
            }

